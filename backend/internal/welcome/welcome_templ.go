// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package welcome

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func getStarthtml() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = welcome().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = hi().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = reshmaSuresh().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = internetName().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func welcome() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"ascii-art\"><pre>&#32;&#32;&#32;&#32;&lpar;&macr;&grave;&middot;&period;&cedil;&cedil;&period;&middot;&acute;&macr;&grave;&middot;&period;&cedil;&cedil;&period;&middot;&acute;&macr;&rpar;&NewLine;&#32;&#32;&#32;&lpar;&#32;&bsol;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&sol;&#32;&rpar;&NewLine;&#32;&lpar;&#32;&bsol;&#32;&rpar;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lpar;&#32;&sol;&#32;&rpar;&NewLine;&lpar;&#32;&rpar;&#32;&lpar;&#32;&#32;&#32;&#32;&#32;&#87;&#101;&#108;&#99;&#111;&#109;&#101;&excl;&#32;&#32;&#32;&#32;&rpar;&#32;&lpar;&#32;&rpar;&NewLine;&#32;&lpar;&#32;&sol;&#32;&rpar;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lpar;&#32;&bsol;&#32;&rpar;&NewLine;&#32;&#32;&lpar;&#32;&sol;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&bsol;&#32;&rpar;&NewLine;&#32;&#32;&#32;&lpar;&lowbar;&period;&middot;&acute;&macr;&grave;&middot;&period;&cedil;&cedil;&period;&middot;&acute;&macr;&grave;&middot;&period;&cedil;&lowbar;&rpar;</pre></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func hi() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"hi\">Hi! I am,</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func reshmaSuresh() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"ascii-art\"><pre>&#32;&#32;&lowbar;&lowbar;&lowbar;&lowbar;&lowbar;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lowbar;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lowbar;&lowbar;&lowbar;&lowbar;&lowbar;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lowbar;&#32;&#32;&#32;&#32;&#32;&NewLine;&#32;&verbar;&#32;&#32;&lowbar;&lowbar;&#32;&bsol;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&verbar;&#32;&verbar;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&sol;&#32;&lowbar;&lowbar;&lowbar;&lowbar;&verbar;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&verbar;&#32;&verbar;&#32;&#32;&#32;&#32;&NewLine;&#32;&verbar;&#32;&verbar;&lowbar;&lowbar;&rpar;&#32;&verbar;&lowbar;&lowbar;&lowbar;&#32;&#32;&lowbar;&lowbar;&lowbar;&verbar;&#32;&verbar;&lowbar;&lowbar;&#32;&#32;&lowbar;&#32;&lowbar;&lowbar;&#32;&lowbar;&lowbar;&lowbar;&#32;&#32;&#32;&lowbar;&lowbar;&#32;&lowbar;&#32;&#32;&verbar;&#32;&lpar;&lowbar;&lowbar;&lowbar;&#32;&#32;&lowbar;&#32;&#32;&#32;&lowbar;&#32;&lowbar;&#32;&lowbar;&lowbar;&#32;&lowbar;&lowbar;&lowbar;&#32;&#32;&lowbar;&lowbar;&lowbar;&verbar;&#32;&verbar;&lowbar;&lowbar;&#32;&#32;&NewLine;&#32;&verbar;&#32;&#32;&lowbar;&#32;&#32;&sol;&sol;&#32;&lowbar;&#32;&bsol;&sol;&#32;&lowbar;&lowbar;&verbar;&#32;&apos;&lowbar;&#32;&bsol;&verbar;&#32;&apos;&lowbar;&#32;&grave;&#32;&lowbar;&#32;&bsol;&#32;&sol;&#32;&lowbar;&grave;&#32;&verbar;&#32;&#32;&bsol;&lowbar;&lowbar;&lowbar;&#32;&bsol;&verbar;&#32;&verbar;&#32;&verbar;&#32;&verbar;&#32;&apos;&lowbar;&lowbar;&sol;&#32;&lowbar;&#32;&bsol;&sol;&#32;&lowbar;&lowbar;&verbar;&#32;&apos;&lowbar;&#32;&bsol;&#32;&NewLine;&#32;&verbar;&#32;&verbar;&#32;&bsol;&#32;&bsol;&#32;&#32;&lowbar;&lowbar;&sol;&bsol;&lowbar;&lowbar;&#32;&bsol;&#32;&verbar;&#32;&verbar;&#32;&verbar;&#32;&verbar;&#32;&verbar;&#32;&verbar;&#32;&verbar;&#32;&verbar;&#32;&lpar;&lowbar;&verbar;&#32;&verbar;&#32;&#32;&lowbar;&lowbar;&lowbar;&lowbar;&rpar;&#32;&verbar;&#32;&verbar;&lowbar;&verbar;&#32;&verbar;&#32;&verbar;&#32;&verbar;&#32;&#32;&lowbar;&lowbar;&sol;&bsol;&lowbar;&lowbar;&#32;&bsol;&#32;&verbar;&#32;&verbar;&#32;&verbar;&NewLine;&#32;&verbar;&lowbar;&verbar;&#32;&#32;&bsol;&lowbar;&bsol;&lowbar;&lowbar;&lowbar;&verbar;&verbar;&lowbar;&lowbar;&lowbar;&sol;&lowbar;&verbar;&#32;&verbar;&lowbar;&verbar;&lowbar;&verbar;&#32;&verbar;&lowbar;&verbar;&#32;&verbar;&lowbar;&verbar;&bsol;&lowbar;&lowbar;&comma;&lowbar;&verbar;&#32;&verbar;&lowbar;&lowbar;&lowbar;&lowbar;&lowbar;&sol;&#32;&bsol;&lowbar;&lowbar;&comma;&lowbar;&verbar;&lowbar;&verbar;&#32;&#32;&bsol;&lowbar;&lowbar;&lowbar;&verbar;&verbar;&lowbar;&lowbar;&lowbar;&sol;&lowbar;&verbar;&#32;&verbar;&lowbar;&verbar;</pre></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func internetName() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var5 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var5 == nil {
			templ_7745c5c3_Var5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div>My internet name is, ✧₊⁺b3ll9trix⁺₊✧</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
